{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"checked\", \"thumbColor\", \"activeFillColor\", \"inactiveFillColor\", \"duration\", \"thumbStyle\", \"switchStyle\", \"style\", \"onPress\", \"haptic\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Haptics from 'expo-haptics';\nimport useTheme from \"../hooks/useTheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Switch = function Switch(_ref) {\n  var _ref$id = _ref.id,\n    id = _ref$id === void 0 ? 'Switch' : _ref$id,\n    _ref$checked = _ref.checked,\n    checked = _ref$checked === void 0 ? false : _ref$checked,\n    _ref$thumbColor = _ref.thumbColor,\n    thumbColor = _ref$thumbColor === void 0 ? 'white' : _ref$thumbColor,\n    activeFillColor = _ref.activeFillColor,\n    inactiveFillColor = _ref.inactiveFillColor,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 250 : _ref$duration,\n    thumbStyle = _ref.thumbStyle,\n    switchStyle = _ref.switchStyle,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    _ref$haptic = _ref.haptic,\n    haptic = _ref$haptic === void 0 ? true : _ref$haptic,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(checked),\n    _useState2 = _slicedToArray(_useState, 2),\n    isChecked = _useState2[0],\n    setChecked = _useState2[1];\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors,\n    sizes = _useTheme.sizes;\n  var activeColor = activeFillColor || colors.switchOn;\n  var inactiveColor = inactiveFillColor || colors.switchOff;\n  var animation = useRef(new Animated.Value(isChecked ? 28 : 2)).current;\n  var handleToggle = useCallback(function () {\n    setChecked(!isChecked);\n    onPress == null ? void 0 : onPress(!isChecked);\n    if (haptic) {\n      Haptics.selectionAsync();\n    }\n  }, [isChecked, haptic, setChecked, onPress]);\n  useEffect(function () {\n    Animated.timing(animation, {\n      duration: duration,\n      useNativeDriver: false,\n      toValue: isChecked ? 28 : 2\n    }).start();\n  }, [isChecked, animation, duration]);\n  useEffect(function () {\n    if (isChecked !== checked) {\n      setChecked(checked);\n    }\n  }, [isChecked, checked]);\n  var bgColor = animation.interpolate({\n    inputRange: [2, 28],\n    outputRange: [String(inactiveColor), String(activeColor)]\n  });\n  var switchStyles = StyleSheet.flatten([{\n    justifyContent: 'center',\n    alignContent: 'center',\n    backgroundColor: bgColor,\n    height: sizes.switchHeight\n  }, switchStyle]);\n  var thumbStyles = StyleSheet.flatten([thumbStyle, {\n    width: sizes.switchThumb,\n    height: sizes.switchThumb,\n    backgroundColor: thumbColor,\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: sizes.shadowOffsetWidth,\n      height: sizes.shadowOffsetHeight\n    },\n    shadowOpacity: sizes.shadowOpacity,\n    shadowRadius: sizes.shadowRadius,\n    elevation: sizes.elevation,\n    borderRadius: sizes.switchThumb / 2,\n    transform: [{\n      translateX: animation\n    }]\n  }]);\n  var containerStyles = StyleSheet.flatten([style, {\n    overflow: 'hidden',\n    width: sizes.switchWidth,\n    height: sizes.switchHeight,\n    borderRadius: sizes.switchHeight\n  }]);\n  var switchID = Platform.OS === 'android' ? {\n    accessibilityLabel: id\n  } : {\n    testID: id\n  };\n  return _jsx(Pressable, _objectSpread(_objectSpread(_objectSpread({}, switchID), {}, {\n    hitSlop: sizes.s,\n    onPress: handleToggle,\n    style: containerStyles\n  }, props), {}, {\n    children: _jsx(Animated.View, {\n      style: switchStyles,\n      children: _jsx(Animated.View, {\n        style: thumbStyles\n      })\n    })\n  }));\n};\nexport default React.memo(Switch);","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Animated","Pressable","Platform","StyleSheet","Haptics","useTheme","jsx","_jsx","Switch","_ref","_ref$id","id","_ref$checked","checked","_ref$thumbColor","thumbColor","activeFillColor","inactiveFillColor","_ref$duration","duration","thumbStyle","switchStyle","style","onPress","_ref$haptic","haptic","props","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","isChecked","setChecked","_useTheme","colors","sizes","activeColor","switchOn","inactiveColor","switchOff","animation","Value","current","handleToggle","selectionAsync","timing","useNativeDriver","toValue","start","bgColor","interpolate","inputRange","outputRange","String","switchStyles","flatten","justifyContent","alignContent","backgroundColor","height","switchHeight","thumbStyles","width","switchThumb","shadowColor","shadow","shadowOffset","shadowOffsetWidth","shadowOffsetHeight","shadowOpacity","shadowRadius","elevation","borderRadius","transform","translateX","containerStyles","overflow","switchWidth","switchID","OS","accessibilityLabel","testID","_objectSpread","hitSlop","s","children","View","memo"],"sources":["/Users/mauricioescudero/campusparking/MovApp/src/components/Switch.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  Animated,\n  Pressable,\n  Platform,\n  ViewStyle,\n  StyleSheet,\n} from 'react-native';\nimport * as Haptics from 'expo-haptics';\n\nimport {ISwitchProps} from '../constants/types';\nimport useTheme from '../hooks/useTheme';\n\nconst Switch = ({\n  id = 'Switch',\n  checked = false,\n  thumbColor = 'white',\n  activeFillColor,\n  inactiveFillColor,\n  duration = 250,\n  thumbStyle,\n  switchStyle,\n  style,\n  onPress,\n  haptic = true,\n  ...props\n}: ISwitchProps) => {\n  const [isChecked, setChecked] = useState(checked);\n  const {colors, sizes} = useTheme();\n  const activeColor = activeFillColor || colors.switchOn;\n  const inactiveColor = inactiveFillColor || colors.switchOff;\n\n  const animation = useRef(new Animated.Value(isChecked ? 28 : 2)).current;\n\n  const handleToggle = useCallback(() => {\n    setChecked(!isChecked);\n    onPress?.(!isChecked);\n\n    /* haptic feedback onPress */\n    if (haptic) {\n      Haptics.selectionAsync();\n    }\n  }, [isChecked, haptic, setChecked, onPress]);\n\n  useEffect(() => {\n    Animated.timing(animation, {\n      duration,\n      useNativeDriver: false,\n      toValue: isChecked ? 28 : 2,\n    }).start();\n  }, [isChecked, animation, duration]);\n\n  /* update local state for isChecked when checked prop is updated */\n  useEffect(() => {\n    if (isChecked !== checked) {\n      setChecked(checked);\n    }\n  }, [isChecked, checked]);\n\n  const bgColor = animation.interpolate({\n    inputRange: [2, 28],\n    outputRange: [String(inactiveColor), String(activeColor)],\n  });\n\n  const switchStyles = StyleSheet.flatten([\n    {\n      justifyContent: 'center',\n      alignContent: 'center',\n      backgroundColor: bgColor,\n      height: sizes.switchHeight,\n    },\n    switchStyle,\n  ]) as ViewStyle;\n\n  const thumbStyles = StyleSheet.flatten([\n    thumbStyle,\n    {\n      width: sizes.switchThumb,\n      height: sizes.switchThumb,\n      backgroundColor: thumbColor,\n      shadowColor: colors.shadow,\n      shadowOffset: {\n        width: sizes.shadowOffsetWidth,\n        height: sizes.shadowOffsetHeight,\n      },\n      shadowOpacity: sizes.shadowOpacity,\n      shadowRadius: sizes.shadowRadius,\n      elevation: sizes.elevation,\n      borderRadius: sizes.switchThumb / 2,\n      transform: [{translateX: animation}],\n    },\n  ]) as ViewStyle;\n\n  const containerStyles = StyleSheet.flatten([\n    style,\n    {\n      overflow: 'hidden',\n      width: sizes.switchWidth,\n      height: sizes.switchHeight,\n      borderRadius: sizes.switchHeight,\n    },\n  ]) as ViewStyle;\n\n  // generate component testID or accessibilityLabel based on Platform.OS\n  const switchID =\n    Platform.OS === 'android' ? {accessibilityLabel: id} : {testID: id};\n\n  return (\n    <Pressable\n      {...switchID}\n      hitSlop={sizes.s}\n      onPress={handleToggle}\n      style={containerStyles}\n      {...props}>\n      <Animated.View style={switchStyles}>\n        <Animated.View style={thumbStyles} />\n      </Animated.View>\n    </Pressable>\n  );\n};\n\nexport default React.memo(Switch);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}